// Generated by Selenium IDEa
const { Builder, By, Key, until } = require('selenium-webdriver')
var Jasmine = require('jasmine');
var jasmine = new Jasmine();
const assert = require('assert')
const sleep = require('thread-sleep')
const myError=new Error('error!!')

//function throwsError() { throw new TypeError("A type error"); }


describe('Security', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
	await driver.get("https://alpha.toast.com/kr/product/calculator?c=security&s=web-firewall");
    await driver.manage().window().maximize();
	vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
	it('WebFirewall(Self)', async function() {
		expect(assert(await driver.findElement(By.xpath("//h4[contains(.,\'WEB Firewall (Self)\')]")).getText() == "WEB Firewall (Slf)")).toBetruthy()
		assert(await driver.findElement(By.xpath("//div[@id=\'security-web-firewall\']/div/table/thead/tr/th")).getText() == "수량(라이선스 비용)")
		await driver.findElement(By.xpath("//div[@id=\'security-web-firewall\']/div/table/tbody/tr/td/div/span/input")).click()
		await driver.findElement(By.xpath("//div[@id=\'security-web-firewall\']/div/table/tbody/tr/td/div/span/input")).sendKeys("5")
		await driver.findElement(By.css(".wrap_outer")).click()
		sleep(1000)
		expect(assert(await driver.findElement(By.xpath("//div[@id=\'security-web-firewall\']/div[2]/em/span")).getText() == "800,000")).toBetruthy()
		await driver.findElement(By.xpath("(//button[@type=\'button\'])[18]")).click()
  })
})
